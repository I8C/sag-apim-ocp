{{- if and (and ($.Release.IsInstall) (eq .Values.isUpdate false)) }}
---

{{- $tenants:=  (tuple "default" "master") }}
{{ range $tenant:= $tenants }}

apiVersion: batch/v1
kind: Job
metadata:
  name: "{{$.Release.Name}}-change-passwords-tenant-{{$tenant}}"
  labels:
    job: {{ $.Release.Name }}-change-passwords-{{ $tenant }}
    helm-release: {{ $.Release.Name }}

spec:
  # configurable number of retries with exponential back-off delay (10s, 20s, 40s, ...) with 6mins max
  backoffLimit: {{ $.Values.jobs.backoffLimit }}
  template:
    spec:
{{- if $.Values.tolerations }}
      tolerations:
{{ toYaml $.Values.tolerations | indent 8 }}
{{- end }}
      initContainers:
      - name: waitforzookeeper
        image: {{ $.Values.image.registry }}/{{ index $.Values "products" "imageBasePath" $.Values.product }}aris-admin-tools:{{ index $.Values "products" "version" $.Values.product }}
        imagePullPolicy: {{$.Values.image.pullPolicy | default "always" | quote}}
        securityContext:
          runAsUser: 0
        command:
          - bash
          - -ec
          - |
{{ tpl ($.Files.Get "files/zkStatusCheck.sh") $ | indent 14 }}
      containers:
      - name: "{{$.Release.Name}}-change-passwords-tenant-{{$tenant}}"
        image: {{ $.Values.image.registry }}/{{ index $.Values "products" "imageBasePath" $.Values.product }}aris-admin-tools:{{ index $.Values "products" "version" $.Values.product }}
        imagePullPolicy: {{ $.Values.image.pullPolicy | default "Always" | quote}}
        securityContext:
          runAsUser: 0
        command: ["/bin/bash" ]
        args: [ "-c", "printf '#!/bin/bash\nset -x\n\
         ./y-tenantmgmt.sh -s http://{{$.Release.Name}}-loadbalancer:{{$.Values.loadbalancer.service.port}} -t {{$tenant}} changePassword -u system -p '${DEFAULT_APP_PASSWD}' -au guest -ap \"'${APP_PASSWD}'\" && \
         ./y-tenantmgmt.sh -s http://{{$.Release.Name}}-loadbalancer:{{$.Values.loadbalancer.service.port}} -t {{$tenant}} changePassword -u system -p '${DEFAULT_APP_PASSWD}' -au arisservice -ap \"'${APP_PASSWD}'\" && \
         ./y-tenantmgmt.sh -s http://{{$.Release.Name}}-loadbalancer:{{$.Values.loadbalancer.service.port}} -t {{$tenant}} changePassword -u system -p '${DEFAULT_APP_PASSWD}' -au superuser -ap \"'${APP_PASSWD}'\" && \
         ./y-tenantmgmt.sh -s http://{{$.Release.Name}}-loadbalancer:{{$.Values.loadbalancer.service.port}} -t {{$tenant}} changePassword -u system -p '${DEFAULT_APP_PASSWD}' -au system -ap \"'${APP_PASSWD}'\"' \
         > changePasswords.sh; \
         chmod +x changePasswords.sh; \
         cat changePasswords.sh; \
         /aris/container/retry.sh {{$.Values.jobs.internalRetry.maxRetries }} {{$.Values.jobs.internalRetry.waitTimeSec }} timeout 60 ./changePasswords.sh;"]
        env:
        - name: APP_PASSWD
          valueFrom:
            secretKeyRef:
              name: {{ $.Release.Name }}-app-secrets
              key: app_passwd
        - name: DEFAULT_APP_PASSWD
          valueFrom:
            secretKeyRef:
              name: {{ $.Release.Name }}-app-secrets
              key: default_app_passwd
      restartPolicy: OnFailure
{{- if eq $.Values.image.servicePrincipal false }}
      imagePullSecrets:
      - name: {{ $.Values.image.registrySecret }}
{{- end }}

---
{{- end }} #end range
{{- end }}
